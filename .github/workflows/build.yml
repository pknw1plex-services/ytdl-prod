name: Build Dockerfile

on:
  workflow_dispatch:
    inputs:
      docker_build:
        description: 'Backup Service'
        required: true
        type: boolean
        default: 'true'
      docker_pull:
        description: 'Backup Config'
        required: true
        type: boolean
      docker_root:
        required: true
        default: '/etc/pknw1/docker'

jobs:
  docker_build:
    if: ${{ inputs.docker_build == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        run: |
          TIMESTAMP=$(date +%s)
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo-name.outputs.repository-name }}:${TIMESTAMP} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo-name.outputs.repository-name }}:${TIMESTAMP}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo-name.outputs.repository-name }}:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo-name.outputs.repository-name }}:latest

  docker_pull:
    runs-on: ubuntu-latest
    needs: docker_build
    if: ${{ inputs.docker_pull == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'
      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: cd ${{ inputs.docker_root }}/${{ steps.repo-name.outputs.repository-name }} && docker compose pull
